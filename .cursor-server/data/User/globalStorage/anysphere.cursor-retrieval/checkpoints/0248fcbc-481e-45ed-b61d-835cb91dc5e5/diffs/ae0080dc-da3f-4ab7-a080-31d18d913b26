{"fsPath":"\\home\\hendo420\\soraFeed\\scripts\\scanner.js","fileUuid":"ae0080dc-da3f-4ab7-a080-31d18d913b26","fileSizeBytes":15807,"numLines":510,"diffChanges":[{"originalStartLineNumberOneIndexed":84,"originalEndLineNumberExclusiveOneIndexed":84,"modifiedStartLineNumberOneIndexed":84,"modifiedEndLineNumberExclusiveOneIndexed":114,"addedLines":["","// Fetch feed with minimum guarantee of 200 posts","async function fetchSoraFeedWithMinimum(limit = currentFetchLimit) {","  const minPosts = 200;","  let attempts = 0;","  const maxAttempts = 3;","  ","  while (attempts < maxAttempts) {","    const feedData = await fetchSoraFeed(limit);","    const postCount = feedData.items?.length || 0;","    ","    if (postCount >= minPosts) {","      return feedData;","    }","    ","    attempts++;","    console.log(`‚ö†Ô∏è  Only got ${postCount} posts (need ${minPosts}), attempt ${attempts}/${maxAttempts}`);","    ","    if (attempts < maxAttempts) {","      // Increase limit for next attempt","      limit = Math.max(limit + 50, minPosts);","      console.log(`üîÑ Retrying with limit ${limit}...`);","      await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second","    }","  }","  ","  // If we still don't have enough posts after all attempts, return what we have","  console.log(`‚ö†Ô∏è  Could not get minimum ${minPosts} posts after ${maxAttempts} attempts`);","  return await fetchSoraFeed(limit);","}"],"tokenizedAddedLines":[4,1000345,1000346,1000347,1000348,1000349,28,1000350,1000351,1000352,130,1000353,1000354,82,130,1000355,1000356,130,1000357,1000358,1000359,1000360,1000361,82,35,28,1000362,1000363,1000364,40]},{"originalStartLineNumberOneIndexed":199,"originalEndLineNumberExclusiveOneIndexed":200,"modifiedStartLineNumberOneIndexed":229,"modifiedEndLineNumberExclusiveOneIndexed":232,"addedLines":["        previous_scan_count INTEGER DEFAULT 0,","        last_scan_duplicates INTEGER DEFAULT 0,","        last_scan_unique INTEGER DEFAULT 0"],"tokenizedAddedLines":[1000365,1000366,1000367]},{"originalStartLineNumberOneIndexed":319,"originalEndLineNumberExclusiveOneIndexed":320,"modifiedStartLineNumberOneIndexed":351,"modifiedEndLineNumberExclusiveOneIndexed":352,"addedLines":["async function updateStats(stats, duration, error = null, scanCount = 0, scanDuplicates = 0, scanUnique = 0) {"],"tokenizedAddedLines":[1000368]},{"originalStartLineNumberOneIndexed":337,"originalEndLineNumberExclusiveOneIndexed":338,"modifiedStartLineNumberOneIndexed":369,"modifiedEndLineNumberExclusiveOneIndexed":372,"addedLines":["        last_scan_count = $9,","        last_scan_duplicates = $10,","        last_scan_unique = $11"],"tokenizedAddedLines":[1000369,1000370,1000371]},{"originalStartLineNumberOneIndexed":348,"originalEndLineNumberExclusiveOneIndexed":349,"modifiedStartLineNumberOneIndexed":382,"modifiedEndLineNumberExclusiveOneIndexed":385,"addedLines":["      scanCount,","      scanDuplicates,","      scanUnique"],"tokenizedAddedLines":[1000372,1000373,1000374]},{"originalStartLineNumberOneIndexed":380,"originalEndLineNumberExclusiveOneIndexed":382,"modifiedStartLineNumberOneIndexed":416,"modifiedEndLineNumberExclusiveOneIndexed":418,"addedLines":["    // Fetch feed with current limit (guaranteed minimum 200 posts)","    const feedData = await fetchSoraFeedWithMinimum(currentFetchLimit);"],"tokenizedAddedLines":[1000375,1000376]},{"originalStartLineNumberOneIndexed":420,"originalEndLineNumberExclusiveOneIndexed":421,"modifiedStartLineNumberOneIndexed":456,"modifiedEndLineNumberExclusiveOneIndexed":457,"addedLines":["    }, duration, null, currentScanCount, result.duplicates, result.newPosts);"],"tokenizedAddedLines":[1000377]},{"originalStartLineNumberOneIndexed":425,"originalEndLineNumberExclusiveOneIndexed":426,"modifiedStartLineNumberOneIndexed":461,"modifiedEndLineNumberExclusiveOneIndexed":462,"addedLines":["    await updateStats({}, duration, error, 0, 0, 0);"],"tokenizedAddedLines":[1000378]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}