{"fsPath":"\\home\\hendo420\\soraFeed\\src\\lib\\serverCache.ts","fileUuid":"ac1de090-0cbb-40e8-b14f-873f6c7d1bd1","fileSizeBytes":1805,"numLines":99,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":100,"addedLines":["/**"," * Server-side cache for API responses"," * Cache duration: 5 minutes"," */","","interface CachedData<T> {","  data: T;","  timestamp: number;","}","","class ServerCache {","  private cache: Map<string, CachedData<any>> = new Map();","  private readonly CACHE_DURATION = 5 * 60 * 1000; // 5 minutes","","  /**","   * Get data from cache if valid, otherwise return null","   */","  get<T>(key: string): T | null {","    const cached = this.cache.get(key);","    ","    if (!cached) {","      return null;","    }","","    const age = Date.now() - cached.timestamp;","    ","    if (age > this.CACHE_DURATION) {","      // Cache expired, remove it","      this.cache.delete(key);","      return null;","    }","","    return cached.data as T;","  }","","  /**","   * Store data in cache with current timestamp","   */","  set<T>(key: string, data: T): void {","    this.cache.set(key, {","      data,","      timestamp: Date.now(),","    });","  }","","  /**","   * Clear all cache","   */","  clear(): void {","    this.cache.clear();","  }","","  /**","   * Clear expired entries","   */","  cleanup(): void {","    const now = Date.now();","    for (const [key, cached] of this.cache.entries()) {","      if (now - cached.timestamp > this.CACHE_DURATION) {","        this.cache.delete(key);","      }","    }","  }","","  /**","   * Get cache statistics","   */","  getStats() {","    const now = Date.now();","    let valid = 0;","    let expired = 0;","","    for (const cached of this.cache.values()) {","      if (now - cached.timestamp > this.CACHE_DURATION) {","        expired++;","      } else {","        valid++;","      }","    }","","    return {","      total: this.cache.size,","      valid,","      expired,","    };","  }","}","","// Export singleton instance","export const serverCache = new ServerCache();","","// Cleanup expired entries every minute","if (typeof setInterval !== 'undefined') {","  setInterval(() => {","    serverCache.cleanup();","  }, 60 * 1000);","}","",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000003,1000004,1000005,1000006,1000007,1000008,1000004,1000009,1000010,1000011,1000004,1000012,1000013,1000014,1000015,1000016,1000017,1000018,1000019,1000020,1000004,1000021,1000017,1000022,1000023,1000024,1000019,1000020,1000004,1000025,1000026,1000004,1000012,1000027,1000014,1000028,1000029,1000030,1000031,1000032,1000026,1000004,1000012,1000033,1000014,1000034,1000035,1000026,1000004,1000012,1000036,1000014,1000037,1000038,1000039,1000040,1000041,1000042,1000020,1000026,1000004,1000012,1000043,1000014,1000044,1000038,1000045,1000046,1000004,1000047,1000040,1000048,1000049,1000050,1000042,1000020,1000004,1000051,1000052,1000053,1000054,1000055,1000026,1000008,1000004,1000056,1000057,1000004,1000058,1000059,1000060,1000061,1000062,1000008,1000004,1000004]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}