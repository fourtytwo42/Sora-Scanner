{"fsPath":"\\home\\hendo420\\soraFeed\\src\\app\\api\\post\\[postId]\\remix_feed\\route.ts","fileUuid":"fbffe896-9447-494e-8e70-2f91e8fc89d6","fileSizeBytes":3283,"numLines":94,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":95,"addedLines":["import { NextRequest, NextResponse } from 'next/server';","import { SoraFeedResponse } from '@/types/sora';","","const SORA_BASE_URL = 'https://sora.chatgpt.com/backend/project_y';","","export async function GET(request: NextRequest, { params }: { params: Promise<{ postId: string }> }) {","  try {","    const { postId } = await params;","    const { searchParams } = new URL(request.url);","    const cursor = searchParams.get('cursor');","    const limit = searchParams.get('limit') || '20';","","    console.log('üîç Fetching Sora remix feed for post:', postId, 'with params:', { limit, cursor: cursor ? 'present' : 'none' });","","    const requiredEnvVars = [","      'AUTH_BEARER_TOKEN',","      'COOKIE_SESSION',","      'CF_CLEARANCE',","      'USER_AGENT',","      'CF_BM',","      'OAI_SC',","      'OAI_DID',","      'ACCEPT_LANGUAGE'","    ];","","    const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);","    if (missingVars.length > 0) {","      console.error('‚ùå Missing environment variables:', missingVars);","      return NextResponse.json(","        { error: `Missing environment variables: ${missingVars.join(', ')}` },","        { status: 500 }","      );","    }","","    const cookieHeader = [","      `__Secure-next-auth.session-token=${process.env.COOKIE_SESSION}`,","      `cf_clearance=${process.env.CF_CLEARANCE}`,","      `__cf_bm=${process.env.CF_BM}`,","      `oai-sc=${process.env.OAI_SC}`,","      `oai-did=${process.env.OAI_DID}`,","    ].filter(Boolean).join('; ');","","    // Build URL with optional cursor parameter","    const urlParams = new URLSearchParams({","      limit,","    });","    ","    if (cursor) {","      urlParams.append('cursor', cursor);","    }","","    const url = `${SORA_BASE_URL}/post/${postId}/remix_feed?${urlParams.toString()}`;","","    console.log('üì° Making request to:', url);","    console.log('üç™ Cookie string length:', cookieHeader.length);","    console.log('üîë Bearer token present:', !!process.env.AUTH_BEARER_TOKEN);","","    const soraResponse = await fetch(url, {","      headers: {","        'Authorization': `Bearer ${process.env.AUTH_BEARER_TOKEN}`,","        'Accept': '*/*',","        'Accept-Language': process.env.ACCEPT_LANGUAGE || 'en-US,en;q=0.9',","        'User-Agent': process.env.USER_AGENT || 'Mozilla/5.0',","        'Referer': `https://sora.chatgpt.com/p/${postId}`,","        'Cookie': cookieHeader,","      },","      cache: 'no-store',","    });","","    console.log('üìä Response status:', soraResponse.status);","    console.log('üìä Response headers:', Object.fromEntries(soraResponse.headers.entries()));","","    if (!soraResponse.ok) {","      const errorText = await soraResponse.text();","      console.error('‚ùå Sora API error:', soraResponse.status, soraResponse.statusText, errorText);","      return NextResponse.json(","        { error: `Failed to fetch remix feed from Sora API: ${soraResponse.statusText}`, details: errorText },","        { status: soraResponse.status }","      );","    }","","    const data: SoraFeedResponse = await soraResponse.json();","    console.log('‚úÖ Successfully fetched remix feed with', data.items?.length || 0, 'video remixes');","","    return NextResponse.json(data);","  } catch (error) {","    console.error('üö® Server error fetching remix feed:', error);","    return NextResponse.json(","      { error: 'Internal server error fetching remix feed' },","      { status: 500 }","    );","  }","}",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000003,1000002,1000004,1000005,1000006,1000007,1000008,1000009,1000002,1000010,1000002,1000011,1000012,1000013,1000014,1000015,1000016,1000017,1000018,1000019,1000020,1000002,1000021,1000022,1000023,1000024,1000025,1000026,1000027,1000028,1000002,1000029,1000030,1000031,1000032,1000033,1000034,1000035,1000002,1000036,1000037,1000038,1000039,1000040,1000041,1000042,1000028,1000002,1000043,1000002,1000044,1000045,1000046,1000002,1000047,1000048,1000049,1000050,1000051,1000052,1000053,1000054,1000055,1000056,1000039,1000002,1000057,1000058,1000002,1000059,1000060,1000061,1000024,1000062,1000063,1000027,1000028,1000002,1000064,1000065,1000002,1000066,1000067,1000068,1000069,1000070,1000071,1000072,1000073,1000074,1000002]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}