{"fsPath":"\\home\\hendo420\\soraFeed\\src\\app\\api\\video\\[videoId]\\download\\route.ts","fileUuid":"21b56771-7fe7-41c0-b861-1aa17d6abf72","fileSizeBytes":1759,"numLines":62,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":63,"addedLines":["import { NextRequest, NextResponse } from 'next/server';","","const SORA_API_BASE = 'https://api.openai.com/v1/videos';","","export async function GET(","  request: NextRequest,","  { params }: { params: Promise<{ videoId: string }> }",") {","  try {","    const { videoId } = await params;","    ","    // Check for API key","    if (!process.env.SORA_API_KEY) {","      return NextResponse.json(","        { error: 'Sora API key not configured' },","        { status: 500 }","      );","    }","","    console.log('üì• Downloading video from Sora API:', videoId);","","    // Fetch video from Sora API","    const response = await fetch(`${SORA_API_BASE}/${videoId}/content`, {","      headers: {","        'Authorization': `Bearer ${process.env.SORA_API_KEY}`,","      },","    });","","    if (!response.ok) {","      const errorText = await response.text();","      console.error('‚ùå Sora API error:', response.status, errorText);","      return NextResponse.json(","        { error: `Failed to download video: ${response.statusText}` },","        { status: response.status }","      );","    }","","    // Get the video content","    const videoBuffer = await response.arrayBuffer();","    ","    console.log('‚úÖ Successfully downloaded video from Sora API');","","    // Return the video with appropriate headers","    return new NextResponse(videoBuffer, {","      status: 200,","      headers: {","        'Content-Type': 'video/mp4',","        'Content-Disposition': `attachment; filename=\"${videoId}.mp4\"`,","        'Content-Length': videoBuffer.byteLength.toString(),","      },","    });","","  } catch (error) {","    console.error('üí• Server error downloading video:', error);","    return NextResponse.json(","      { error: 'Internal server error', message: error instanceof Error ? error.message : 'Unknown error' },","      { status: 500 }","    );","  }","}","",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000001,1000003,1000004,1000005,1000006,1000007,1000008,1000009,1000010,1000011,1000012,1000013,1000014,1000015,1000016,1000001,1000017,1000001,1000018,1000019,1000020,1000021,1000022,1000023,1000001,1000024,1000025,1000026,1000012,1000027,1000028,1000015,1000016,1000001,1000029,1000030,1000009,1000031,1000001,1000032,1000033,1000034,1000020,1000035,1000036,1000037,1000022,1000023,1000001,1000038,1000039,1000040,1000041,1000042,1000043,1000044,1000045,1000001,1000001]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}