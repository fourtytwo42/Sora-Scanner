{"fsPath":"\\home\\hendo420\\soraFeed\\scripts\\cleanup-backup.js","fileUuid":"7e28c3ef-0904-42a3-9383-368e2e408420","fileSizeBytes":2149,"numLines":76,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":77,"addedLines":["const { Pool } = require('pg');","require('dotenv').config();","","const pool = new Pool({","  host: process.env.DB_HOST || 'localhost',","  port: parseInt(process.env.DB_PORT || '5432'),","  database: process.env.DB_NAME || 'sora_feed',","  user: process.env.DB_USER || 'postgres',","  password: process.env.DB_PASSWORD || '',","});","","async function cleanupBackup() {","  const client = await pool.connect();","  ","  try {","    console.log('🗑️  Removing sora_posts_backup table...');","    ","    // Check if backup table exists","    const checkResult = await client.query(`","      SELECT EXISTS (","        SELECT FROM information_schema.tables ","        WHERE table_schema = 'public' ","        AND table_name = 'sora_posts_backup'","      );","    `);","    ","    if (!checkResult.rows[0].exists) {","      console.log('ℹ️  Backup table does not exist - already cleaned up');","      return;","    }","    ","    // Get size before deletion","    const sizeResult = await client.query(`","      SELECT pg_size_pretty(pg_total_relation_size('sora_posts_backup')) as size","    `);","    const backupSize = sizeResult.rows[0].size;","    ","    console.log(`📊 Backup table size: ${backupSize}`);","    ","    // Drop the backup table","    await client.query('DROP TABLE sora_posts_backup CASCADE');","    console.log('✅ Backup table removed successfully');","    ","    // Run VACUUM to reclaim space","    console.log('🧹 Running VACUUM to reclaim space...');","    await client.query('VACUUM');","    console.log('✅ Database space reclaimed');","    ","    // Get new database size","    const newSizeResult = await client.query(`","      SELECT pg_size_pretty(pg_database_size(current_database())) as size","    `);","    const newSize = newSizeResult.rows[0].size;","    ","    console.log(`📊 New database size: ${newSize}`);","    console.log(`💾 Space saved: ${backupSize}`);","    ","  } catch (error) {","    console.error('❌ Cleanup failed:', error);","    throw error;","  } finally {","    client.release();","    await pool.end();","  }","}","","cleanupBackup()","  .then(() => {","    console.log('✅ Cleanup completed successfully');","    process.exit(0);","  })","  .catch((error) => {","    console.error('💥 Cleanup failed:', error);","    process.exit(1);","  });",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000003,1000004,1000005,1000006,1000007,1000008,1000009,1000002,1000010,1000011,1000012,1000013,1000014,1000015,1000016,1000017,1000018,1000019,1000020,1000021,1000022,1000023,1000015,1000024,1000025,1000026,1000027,1000015,1000028,1000029,1000030,1000023,1000031,1000015,1000032,1000015,1000033,1000034,1000035,1000015,1000036,1000037,1000038,1000039,1000015,1000040,1000041,1000042,1000023,1000043,1000015,1000044,1000045,1000015,1000046,1000047,1000048,1000049,1000050,1000051,1000052,1000053,1000002,1000054,1000055,1000056,1000057,1000058,1000059,1000060,1000061,1000062,1000002]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}