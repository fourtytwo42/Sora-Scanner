{"fsPath":"\\home\\hendo420\\soraFeed\\src\\components\\VerticalCarousel.tsx","fileUuid":"0b022239-6091-48ab-b3c3-450b54751e63","fileSizeBytes":7405,"numLines":232,"diffChanges":[{"originalStartLineNumberOneIndexed":3,"originalEndLineNumberExclusiveOneIndexed":4,"modifiedStartLineNumberOneIndexed":3,"modifiedEndLineNumberExclusiveOneIndexed":4,"addedLines":["import React, { useCallback, useEffect, useState, useRef } from 'react';"],"tokenizedAddedLines":[1000113]},{"originalStartLineNumberOneIndexed":8,"originalEndLineNumberExclusiveOneIndexed":8,"modifiedStartLineNumberOneIndexed":8,"modifiedEndLineNumberExclusiveOneIndexed":9,"addedLines":["import { useGestureRails } from '@/hooks/useGestureRails';"],"tokenizedAddedLines":[1000114]},{"originalStartLineNumberOneIndexed":31,"originalEndLineNumberExclusiveOneIndexed":33,"modifiedStartLineNumberOneIndexed":32,"modifiedEndLineNumberExclusiveOneIndexed":40,"addedLines":["  const wheelAccumulator = useRef(0);","  const wheelTimeout = useRef<NodeJS.Timeout | null>(null);","  const isWheelScrolling = useRef(false);","  ","  // Gesture rails system","  const gestureRails = useGestureRails(20);","  ","  // Configure Embla for vertical scrolling with custom wheel handling"],"tokenizedAddedLines":[1000115,1000116,1000117,29,1000118,1000119,29,1000120]},{"originalStartLineNumberOneIndexed":41,"originalEndLineNumberExclusiveOneIndexed":43,"modifiedStartLineNumberOneIndexed":48,"modifiedEndLineNumberExclusiveOneIndexed":74,"addedLines":["      dragThreshold: 15,","      inViewThreshold: 0.8, // Snap when 80% of slide is visible","      watchDrag: (emblaApi, evt) => {","        // Block vertical dragging if horizontal gesture is active","        if (gestureRails.shouldBlockGesture('vertical')) {","          return false;","        }","        ","        // Handle touch/mouse events for gesture detection","        const clientX = evt.type.includes('touch') ","          ? ((evt as TouchEvent).touches[0] || (evt as TouchEvent).changedTouches[0])?.clientX || 0","          : (evt as MouseEvent).clientX;","        const clientY = evt.type.includes('touch') ","          ? ((evt as TouchEvent).touches[0] || (evt as TouchEvent).changedTouches[0])?.clientY || 0","          : (evt as MouseEvent).clientY;","        ","        if (evt.type.includes('start') || evt.type === 'mousedown') {","          gestureRails.startGesture(clientX, clientY);","        } else if (evt.type.includes('move') || evt.type === 'mousemove') {","          const direction = gestureRails.updateGesture(clientX, clientY);","          return direction === 'vertical' || direction === null;","        }","        ","        return gestureRails.isGestureActive('vertical');","      }","    }"],"tokenizedAddedLines":[1000121,1000122,1000123,1000124,1000125,1000126,1000127,106,1000128,1000129,1000130,1000131,1000132,1000133,1000134,106,1000135,1000136,1000137,1000138,1000139,1000127,106,1000140,78,51]},{"originalStartLineNumberOneIndexed":56,"originalEndLineNumberExclusiveOneIndexed":56,"modifiedStartLineNumberOneIndexed":87,"modifiedEndLineNumberExclusiveOneIndexed":130,"addedLines":["","  // Custom wheel handler with threshold-based completion","  const handleWheel = useCallback((e: WheelEvent) => {","    if (!emblaApi || gestureRails.shouldBlockGesture('vertical')) {","      return;","    }","    ","    e.preventDefault();","    ","    // Accumulate wheel delta for more responsive scrolling","    wheelAccumulator.current += e.deltaY;","    ","    // Clear existing timeout","    if (wheelTimeout.current) {","      clearTimeout(wheelTimeout.current);","    }","    ","    // Threshold for triggering navigation (lower = more sensitive)","    const threshold = 50;","    ","    if (Math.abs(wheelAccumulator.current) > threshold) {","      if (wheelAccumulator.current > 0 && currentIndex < items.length - 1) {","        // Scroll down","        emblaApi.scrollNext();","        wheelAccumulator.current = 0;","        isWheelScrolling.current = true;","      } else if (wheelAccumulator.current < 0 && currentIndex > 0) {","        // Scroll up","        emblaApi.scrollPrev();","        wheelAccumulator.current = 0;","        isWheelScrolling.current = true;","      } else {","        // Hit boundary, reset accumulator","        wheelAccumulator.current = 0;","      }","    } else {","      // Set timeout to reset accumulator if no more wheel events","      wheelTimeout.current = setTimeout(() => {","        wheelAccumulator.current = 0;","        isWheelScrolling.current = false;","      }, 150);","    }","  }, [emblaApi, currentIndex, items.length, gestureRails]);"],"tokenizedAddedLines":[2,1000141,1000142,1000143,1000144,51,47,1000145,47,1000146,1000147,47,1000148,1000149,1000150,51,47,1000151,1000152,47,1000153,1000154,1000155,75,1000156,1000157,1000158,1000159,77,1000156,1000157,1000160,1000161,1000156,78,1000162,1000163,1000164,1000156,1000165,1000166,51,1000167]},{"originalStartLineNumberOneIndexed":62,"originalEndLineNumberExclusiveOneIndexed":62,"modifiedStartLineNumberOneIndexed":136,"modifiedEndLineNumberExclusiveOneIndexed":144,"addedLines":["    emblaApi.on('settle', () => {","      gestureRails.endGesture();","      isWheelScrolling.current = false;","    });","    emblaApi.on('pointerUp', () => {","      gestureRails.endGesture();","    });","    "],"tokenizedAddedLines":[1000168,1000169,1000170,1000171,1000172,1000169,1000171,47]},{"originalStartLineNumberOneIndexed":66,"originalEndLineNumberExclusiveOneIndexed":68,"modifiedStartLineNumberOneIndexed":148,"modifiedEndLineNumberExclusiveOneIndexed":164,"addedLines":["      emblaApi.off('settle', () => {});","      emblaApi.off('pointerUp', () => {});","    };","  }, [emblaApi, onSelect, gestureRails]);","","  // Add wheel event listener","  useEffect(() => {","    const container = emblaRef.current;","    if (!container) return;","","    container.addEventListener('wheel', handleWheel, { passive: false });","    ","    return () => {","      container.removeEventListener('wheel', handleWheel);","    };","  }, [handleWheel]);"],"tokenizedAddedLines":[1000173,1000174,59,1000175,2,1000176,54,1000177,1000178,2,1000179,47,57,1000180,59,1000181]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}