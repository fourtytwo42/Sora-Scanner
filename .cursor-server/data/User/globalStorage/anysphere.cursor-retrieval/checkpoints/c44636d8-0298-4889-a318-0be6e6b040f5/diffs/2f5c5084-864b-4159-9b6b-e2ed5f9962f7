{"fsPath":"\\home\\hendo420\\soraFeed\\src\\components\\VideoCarousel.tsx","fileUuid":"2f5c5084-864b-4159-9b6b-e2ed5f9962f7","fileSizeBytes":18798,"numLines":552,"diffChanges":[{"originalStartLineNumberOneIndexed":8,"originalEndLineNumberExclusiveOneIndexed":8,"modifiedStartLineNumberOneIndexed":8,"modifiedEndLineNumberExclusiveOneIndexed":9,"addedLines":["import { useGestureRails } from '@/hooks/useGestureRails';"],"tokenizedAddedLines":[1000392]},{"originalStartLineNumberOneIndexed":48,"originalEndLineNumberExclusiveOneIndexed":49,"modifiedStartLineNumberOneIndexed":49,"modifiedEndLineNumberExclusiveOneIndexed":53,"addedLines":["  // Gesture rails system for preventing axis switching","  const gestureRails = useGestureRails(15);","  ","  // Configure Embla for horizontal scrolling with rails behavior"],"tokenizedAddedLines":[1000393,1000394,35,1000395]},{"originalStartLineNumberOneIndexed":56,"originalEndLineNumberExclusiveOneIndexed":56,"modifiedStartLineNumberOneIndexed":60,"modifiedEndLineNumberExclusiveOneIndexed":88,"addedLines":["    dragThreshold: 20, // Higher threshold for horizontal to prevent accidental triggers","    inViewThreshold: 0.7, // Snap when 70% of slide is visible","    watchDrag: (emblaApi, evt) => {","      // Only allow horizontal dragging when this carousel is active","      if (!isActive) return false;","      ","      // Block horizontal dragging if vertical gesture is active","      if (gestureRails.shouldBlockGesture('horizontal')) {","        return false;","      }","      ","      // Handle touch/mouse events for gesture detection","      const clientX = evt.type.includes('touch') ","        ? ((evt as TouchEvent).touches[0] || (evt as TouchEvent).changedTouches[0])?.clientX || 0","        : (evt as MouseEvent).clientX;","      const clientY = evt.type.includes('touch') ","        ? ((evt as TouchEvent).touches[0] || (evt as TouchEvent).changedTouches[0])?.clientY || 0","        : (evt as MouseEvent).clientY;","      ","      if (evt.type.includes('start') || evt.type === 'mousedown') {","        gestureRails.startGesture(clientX, clientY);","      } else if (evt.type.includes('move') || evt.type === 'mousemove') {","        const direction = gestureRails.updateGesture(clientX, clientY);","        return direction === 'horizontal' || direction === null;","      }","      ","      return gestureRails.isGestureActive('horizontal');","    }"],"tokenizedAddedLines":[1000396,1000397,1000398,1000399,1000400,80,1000401,1000402,1000403,94,80,1000404,1000405,1000406,1000407,1000408,1000409,1000410,80,1000411,1000412,1000413,1000414,1000415,94,80,1000416,122]},{"originalStartLineNumberOneIndexed":81,"originalEndLineNumberExclusiveOneIndexed":81,"modifiedStartLineNumberOneIndexed":113,"modifiedEndLineNumberExclusiveOneIndexed":119,"addedLines":["    emblaApi.on('settle', () => {","      gestureRails.endGesture();","    });","    emblaApi.on('pointerUp', () => {","      gestureRails.endGesture();","    });"],"tokenizedAddedLines":[1000417,1000418,129,1000419,1000418,129]},{"originalStartLineNumberOneIndexed":85,"originalEndLineNumberExclusiveOneIndexed":85,"modifiedStartLineNumberOneIndexed":123,"modifiedEndLineNumberExclusiveOneIndexed":125,"addedLines":["      emblaApi.off('settle', () => {});","      emblaApi.off('pointerUp', () => {});"],"tokenizedAddedLines":[1000420,1000421]},{"originalStartLineNumberOneIndexed":86,"originalEndLineNumberExclusiveOneIndexed":87,"modifiedStartLineNumberOneIndexed":126,"modifiedEndLineNumberExclusiveOneIndexed":127,"addedLines":["  }, [emblaApi, onSelect, gestureRails]);"],"tokenizedAddedLines":[1000422]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}