{"fsPath":"\\home\\hendo420\\soraFeed\\src\\components\\VideoPost.tsx","fileUuid":"5a351769-2e2d-4433-b66c-31cefdb864c7","fileSizeBytes":65638,"numLines":1495,"diffChanges":[{"originalStartLineNumberOneIndexed":85,"originalEndLineNumberExclusiveOneIndexed":87,"modifiedStartLineNumberOneIndexed":85,"modifiedEndLineNumberExclusiveOneIndexed":88,"addedLines":["          // Scrolling left to next remix (can go from original to remix 1, or remix N to remix N+1)","          const nextIndex = currentRemixIndex + 1;","          if (nextIndex <= remixFeed.length && (remixScrollDirection !== 'left' || targetRemixIndex !== nextIndex)) {"],"tokenizedAddedLines":[1000880,1000881,1000882]},{"originalStartLineNumberOneIndexed":88,"originalEndLineNumberExclusiveOneIndexed":89,"modifiedStartLineNumberOneIndexed":89,"modifiedEndLineNumberExclusiveOneIndexed":90,"addedLines":["            setTargetRemixIndex(nextIndex);"],"tokenizedAddedLines":[1000883]},{"originalStartLineNumberOneIndexed":91,"originalEndLineNumberExclusiveOneIndexed":93,"modifiedStartLineNumberOneIndexed":92,"modifiedEndLineNumberExclusiveOneIndexed":95,"addedLines":["          // Scrolling right to previous remix (can go from remix 1 to original, or remix N to remix N-1)","          const prevIndex = currentRemixIndex - 1;","          if (remixScrollDirection !== 'right' || targetRemixIndex !== prevIndex) {"],"tokenizedAddedLines":[1000884,1000885,1000886]},{"originalStartLineNumberOneIndexed":94,"originalEndLineNumberExclusiveOneIndexed":95,"modifiedStartLineNumberOneIndexed":96,"modifiedEndLineNumberExclusiveOneIndexed":97,"addedLines":["            setTargetRemixIndex(prevIndex);"],"tokenizedAddedLines":[1000887]},{"originalStartLineNumberOneIndexed":714,"originalEndLineNumberExclusiveOneIndexed":717,"modifiedStartLineNumberOneIndexed":716,"modifiedEndLineNumberExclusiveOneIndexed":732,"addedLines":["          {/* Render all remix videos in a sliding window - keep them mounted to prevent flashing */}","          {hasRemixes && remixFeed.map((remixItem, index) => {","            // Remix index mapping: remixFeed[0] = remix 1, remixFeed[1] = remix 2, etc.","            // currentRemixIndex: 0 = original, 1 = first remix, 2 = second remix, etc.","            const remixNumber = index + 1; // Convert array index to remix number (1, 2, 3...)","            const remixOffset = remixNumber - currentRemixIndex; // How far this remix is from current","            const shouldRenderRemix = Math.abs(remixOffset) <= 1; // Keep adjacent remixes mounted","            const isCurrentRemix = remixNumber === currentRemixIndex;","            const isPrevRemix = remixNumber === currentRemixIndex - 1;","            const isNextRemix = remixNumber === currentRemixIndex + 1;","            ","            if (!shouldRenderRemix) return null;","            ","            return (","              <div ","                key={`remix-${remixItem.post.id}`}"],"tokenizedAddedLines":[1000888,1000889,1000890,1000891,1000892,1000893,1000894,1000895,1000896,1000897,1000898,1000899,1000898,1000900,517,1000901]},{"originalStartLineNumberOneIndexed":718,"originalEndLineNumberExclusiveOneIndexed":719,"modifiedStartLineNumberOneIndexed":733,"modifiedEndLineNumberExclusiveOneIndexed":737,"addedLines":["                style={{ ","                  transform: `translateX(${remixOffset * 100}%)`,","                  zIndex: isCurrentRemix ? 20 : 10,","                }}"],"tokenizedAddedLines":[519,1000902,1000903,522]},{"originalStartLineNumberOneIndexed":721,"originalEndLineNumberExclusiveOneIndexed":724,"modifiedStartLineNumberOneIndexed":739,"modifiedEndLineNumberExclusiveOneIndexed":742,"addedLines":["                  ref={isPrevRemix ? prevRemixVideoRef : isNextRemix ? nextRemixVideoRef : undefined}","                  src={remixItem.post.attachments[0]?.encodings?.md?.path || ","                       remixItem.post.attachments[0]?.encodings?.source?.path}"],"tokenizedAddedLines":[1000904,1000905,1000906]},{"originalStartLineNumberOneIndexed":730,"originalEndLineNumberExclusiveOneIndexed":730,"modifiedStartLineNumberOneIndexed":748,"modifiedEndLineNumberExclusiveOneIndexed":871,"addedLines":["              </div>","            );","          })}","          ","          {/* Original Video - render when current (0) or adjacent (when currentRemixIndex is 1) */}","          {(currentRemixIndex === 0 || currentRemixIndex === 1) && (","            <div ","              className=\"absolute inset-0 w-full h-full flex items-center justify-center\" ","              style={{ ","                zIndex: currentRemixIndex === 0 ? 20 : 10,","                transform: currentRemixIndex === 0 ? 'translateX(0%)' : 'translateX(-100%)'","              }}","            >","              <div className=\"relative h-full w-full flex items-center justify-center\">","                <div ","                  className=\"relative h-full flex items-center justify-center\"","                  style={{ ","                    width: videoWidth ? `${videoWidth}px` : '100%',","                    maxWidth: '100%'","                  }}","                >","                  {currentVideoUrl && (","                    <video","                      ref={currentRemixIndex === 0 ? videoRef : prevRemixVideoRef}","                      src={currentVideoUrl}","                      className=\"object-contain block\"","                      style={{","                        width: videoWidth ? `${videoWidth}px` : 'auto',","                        height: videoWidth ? 'auto' : '100%',","                        opacity: 1,","                        transition: 'filter 0.3s ease-in-out',","                        filter: isActive && !videoReady ? 'blur(4px)' : 'none'","                      }}","                      muted={isMuted}","                      playsInline","                      onEnded={handleVideoEnd}","                      onLoadStart={() => {","                        console.log('üì• Video load started:', currentVideoUrl);","                      }}","                      onLoadedData={(e) => {","                        console.log('üìä Video data loaded:', currentVideoUrl);","                        const video = e.currentTarget;","                        // Mark video as ready when data loads (for smooth transitions)","                        if (video.readyState >= 2 && !videoReady) {","                          console.log('‚ú® Setting videoReady = true (loaded data)');","                          setVideoReady(true);","                        }","                        // Note: Auto-play is handled by the useEffect, not here","                      }}","                      onLoadedMetadata={(e) => {","                        console.log('üìê Video metadata loaded:', {","                          width: e.currentTarget.videoWidth,","                          height: e.currentTarget.videoHeight,","                          url: currentVideoUrl","                        });","                        const video = e.currentTarget;","                        if (video.videoWidth && video.videoHeight) {","                          const aspectRatio = video.videoWidth / video.videoHeight;","                          const viewportWidth = window.innerWidth;","                          const viewportHeight = window.innerHeight;","                          ","                          // If landscape (wider than tall), fill width","                          // If portrait (taller than wide), fill height","                          if (aspectRatio > 1) {","                            // Landscape: fill width","                            const calculatedHeight = viewportWidth / aspectRatio;","                            setVideoWidth(viewportWidth);","                          } else {","                            // Portrait: fill height","                            const calculatedWidth = viewportHeight * aspectRatio;","                            setVideoWidth(calculatedWidth);","                          }","                        }","                        // Don't seek to 0 - let the video continue playing from where it is","                      }}","                      onCanPlay={(e) => {","                        const video = e.currentTarget;","                        console.log('üé• Video can play:', { isActive, isUpcoming, isTargetVideo, scrollDirection, videoPaused: video.paused, videoCurrentTime: video.currentTime.toFixed(2), url: currentVideoUrl?.substring(0, 100) + '...' });","                        ","                        // Make video ready for all videos (for smooth transitions)","                        setVideoReady(true);","                        console.log('‚ú® Setting videoReady = true');","                        ","                        // Auto-play if it's active OR target during scroll","                        const shouldPlay = isActive || (isTargetVideo && scrollDirection);","                        ","                        if (shouldPlay) {","                          if (video.paused && !userPausedRef.current) {","                            const reason = isActive ? 'active' : 'target during scroll';","                            console.log(`‚ñ∂Ô∏è Auto-playing ${reason} video (onCanPlay)`, { currentTime: video.currentTime.toFixed(2) });","                            video.play().then(() => {","                              console.log(`‚úÖ Auto-play successful (onCanPlay) - ${reason}`, { currentTime: video.currentTime.toFixed(2) });","                              setIsPlaying(true);","                            }).catch(() => {","                              console.log(`‚ùå Auto-play failed (onCanPlay) - ${reason}`);","                              setIsPlaying(false);","                            });","                          } else if (!video.paused) {","                            const reason = isActive ? 'active' : 'target during scroll';","                            console.log(`‚è∏Ô∏è ${reason} video already playing`, { currentTime: video.currentTime.toFixed(2) });","                            // Sync React state with actual video state","                            if (!isPlaying) {","                              setIsPlaying(true);","                            }","                          } else {","                            console.log('‚è∏Ô∏è User paused video, not auto-playing');","                          }","                        } else {","                          // Ensure non-active/non-target videos are paused","                          if (!video.paused) {","                            console.log('‚è∏Ô∏è Pausing non-active/non-target video (onCanPlay)');","                            video.pause();","                          }","                          console.log('‚è∏Ô∏è Video ready but not active/target, keeping paused');","                        }","                      }}","                      preload=\"auto\"","                    >","                      <source src={currentVideoUrl} type=\"video/mp4\" />","                    </video>","                  )}","                </div>","              </div>"],"tokenizedAddedLines":[847,1000907,1000908,513,1000909,1000910,497,1000911,1000912,1000913,1000914,1000915,500,1000916,658,1000917,1000918,1000919,1000920,627,636,1000921,1000922,1000923,1000924,1000925,1000926,1000927,1000928,1000929,1000930,1000931,698,1000932,1000933,1000934,1000935,1000936,698,1000937,1000938,1000939,1000940,1000941,1000942,1000943,571,1000944,698,1000945,1000946,1000947,1000948,1000949,1000950,1000939,1000951,1000952,1000953,1000954,830,1000955,1000956,1000957,1000958,1000959,1000960,1000961,1000962,1000963,1000964,596,571,1000965,698,1000966,1000939,1000967,560,1000968,547,1000969,560,1000970,1000971,560,1000972,1000973,1000974,1000975,1000976,1000977,1000978,1000979,1000980,1000981,1000982,1000983,1000974,1000984,1000985,1000986,1000978,1000987,1000961,1000988,596,567,1000989,1000990,1000991,1000992,596,1000993,571,698,1000994,699,1000995,1000996,713,618,847]},{"originalStartLineNumberOneIndexed":733,"originalEndLineNumberExclusiveOneIndexed":735,"modifiedStartLineNumberOneIndexed":874,"modifiedEndLineNumberExclusiveOneIndexed":992,"addedLines":["          {/* Current Remix Video (currentRemixIndex > 0) */}","          {currentRemixIndex > 0 && (","            <div className=\"absolute inset-0 w-full h-full flex items-center justify-center\" style={{ zIndex: 20 }}>","              <div className=\"relative h-full w-full flex items-center justify-center\">","                <div ","                  className=\"relative h-full flex items-center justify-center\"","                  style={{ ","                    width: videoWidth ? `${videoWidth}px` : '100%',","                    maxWidth: '100%'","                  }}","                >","                  {currentVideoUrl && (","                    <video","                      ref={videoRef}","                      src={currentVideoUrl}","                      className=\"object-contain block\"","                      style={{","                        width: videoWidth ? `${videoWidth}px` : 'auto',","                        height: videoWidth ? 'auto' : '100%',","                        opacity: 1,","                        transition: 'filter 0.3s ease-in-out',","                        filter: isActive && !videoReady ? 'blur(4px)' : 'none'","                      }}","                      muted={isMuted}","                      playsInline","                      onEnded={handleVideoEnd}","                      onLoadStart={() => {","                        console.log('üì• Video load started:', currentVideoUrl);","                      }}","                      onLoadedData={(e) => {","                        console.log('üìä Video data loaded:', currentVideoUrl);","                        const video = e.currentTarget;","                        // Mark video as ready when data loads (for smooth transitions)","                        if (video.readyState >= 2 && !videoReady) {","                          console.log('‚ú® Setting videoReady = true (loaded data)');","                          setVideoReady(true);","                        }","                        // Note: Auto-play is handled by the useEffect, not here","                      }}","                      onLoadedMetadata={(e) => {","                        console.log('üìê Video metadata loaded:', {","                          width: e.currentTarget.videoWidth,","                          height: e.currentTarget.videoHeight,","                          url: currentVideoUrl","                        });","                        const video = e.currentTarget;","                        if (video.videoWidth && video.videoHeight) {","                          const aspectRatio = video.videoWidth / video.videoHeight;","                          const viewportWidth = window.innerWidth;","                          const viewportHeight = window.innerHeight;","                          ","                          // If landscape (wider than tall), fill width","                          // If portrait (taller than wide), fill height","                          if (aspectRatio > 1) {","                            // Landscape: fill width","                            const calculatedHeight = viewportWidth / aspectRatio;","                            setVideoWidth(viewportWidth);","                          } else {","                            // Portrait: fill height","                            const calculatedWidth = viewportHeight * aspectRatio;","                            setVideoWidth(calculatedWidth);","                          }","                        }","                        // Don't seek to 0 - let the video continue playing from where it is","                      }}","                      onCanPlay={(e) => {","                        const video = e.currentTarget;","                        console.log('üé• Video can play:', { isActive, isUpcoming, isTargetVideo, scrollDirection, videoPaused: video.paused, videoCurrentTime: video.currentTime.toFixed(2), url: currentVideoUrl?.substring(0, 100) + '...' });","                        ","                        // Make video ready for all videos (for smooth transitions)","                        setVideoReady(true);","                        console.log('‚ú® Setting videoReady = true');","                        ","                        // Auto-play if it's active OR target during scroll","                        const shouldPlay = isActive || (isTargetVideo && scrollDirection);","                        ","                        if (shouldPlay) {","                          if (video.paused && !userPausedRef.current) {","                            const reason = isActive ? 'active' : 'target during scroll';","                            console.log(`‚ñ∂Ô∏è Auto-playing ${reason} video (onCanPlay)`, { currentTime: video.currentTime.toFixed(2) });","                            video.play().then(() => {","                              console.log(`‚úÖ Auto-play successful (onCanPlay) - ${reason}`, { currentTime: video.currentTime.toFixed(2) });","                              setIsPlaying(true);","                            }).catch(() => {","                              console.log(`‚ùå Auto-play failed (onCanPlay) - ${reason}`);","                              setIsPlaying(false);","                            });","                          } else if (!video.paused) {","                            const reason = isActive ? 'active' : 'target during scroll';","                            console.log(`‚è∏Ô∏è ${reason} video already playing`, { currentTime: video.currentTime.toFixed(2) });","                            // Sync React state with actual video state","                            if (!isPlaying) {","                              setIsPlaying(true);","                            }","                          } else {","                            console.log('‚è∏Ô∏è User paused video, not auto-playing');","                          }","                        } else {","                          // Ensure non-active/non-target videos are paused","                          if (!video.paused) {","                            console.log('‚è∏Ô∏è Pausing non-active/non-target video (onCanPlay)');","                            video.pause();","                          }","                          console.log('‚è∏Ô∏è Video ready but not active/target, keeping paused');","                        }","                      }}","                      preload=\"auto\"","                    >","                      <source src={currentVideoUrl} type=\"video/mp4\" />","                    </video>","                  )}","                </div>","              </div>","            </div>","          )}","          ","          {/* Current Video/Remix Controls Container */}","          <div className=\"absolute inset-0 w-full h-full flex items-center justify-center\" style={{ zIndex: 30 }}>"],"tokenizedAddedLines":[1000997,1000998,1000999,1000916,658,1000917,1000918,1000919,1000920,627,636,1000921,1000922,1001000,1000924,1000925,1000926,1000927,1000928,1000929,1000930,1000931,698,1000932,1000933,1000934,1000935,1000936,698,1000937,1000938,1000939,1000940,1000941,1000942,1000943,571,1000944,698,1000945,1000946,1000947,1000948,1000949,1000950,1000939,1000951,1000952,1000953,1000954,830,1000955,1000956,1000957,1000958,1000959,1000960,1000961,1000962,1000963,1000964,596,571,1000965,698,1000966,1000939,1000967,560,1000968,547,1000969,560,1000970,1000971,560,1000972,1000973,1000974,1000975,1000976,1000977,1000978,1000979,1000980,1000981,1000982,1000983,1000974,1000984,1000985,1000986,1000978,1000987,1000961,1000988,596,567,1000989,1000990,1000991,1000992,596,1000993,571,698,1000994,699,1000995,1000996,713,618,847,511,512,513,1001001,1001002]},{"originalStartLineNumberOneIndexed":1204,"originalEndLineNumberExclusiveOneIndexed":1225,"modifiedStartLineNumberOneIndexed":1461,"modifiedEndLineNumberExclusiveOneIndexed":1461}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}