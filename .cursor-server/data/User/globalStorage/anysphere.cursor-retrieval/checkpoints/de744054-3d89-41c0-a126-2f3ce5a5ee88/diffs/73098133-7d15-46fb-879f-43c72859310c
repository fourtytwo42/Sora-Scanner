{"fsPath":"\\home\\hendo420\\soraFeed\\src\\app\\api\\scanner\\stats\\route.ts","fileUuid":"73098133-7d15-46fb-879f-43c72859310c","fileSizeBytes":1885,"numLines":68,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":1,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":69,"addedLines":["import { NextResponse } from 'next/server';","import { query } from '@/lib/db';","","export async function GET() {","  try {","    // Get scanner statistics","    const statsResult = await query('SELECT * FROM scanner_stats ORDER BY id DESC LIMIT 1');","    const stats = statsResult.rows[0] || {","      total_scanned: 0,","      new_posts: 0,","      duplicate_posts: 0,","      errors: 0,","      last_scan_at: null,","      scan_duration_ms: 0,","      status: 'unknown',","      error_message: null","    };","","    // Get total posts count","    const countResult = await query('SELECT COUNT(*) as total FROM sora_posts');","    const totalPosts = parseInt(countResult.rows[0].total);","","    // Get recent posts (last 10)","    const recentResult = await query(`","      SELECT id, text, posted_at, indexed_at, permalink","      FROM sora_posts","      ORDER BY indexed_at DESC","      LIMIT 10","    `);","","    // Get posts per day stats (last 7 days)","    const dailyStatsResult = await query(`","      SELECT ","        DATE(indexed_at) as date,","        COUNT(*) as count","      FROM sora_posts","      WHERE indexed_at > CURRENT_TIMESTAMP - INTERVAL '7 days'","      GROUP BY DATE(indexed_at)","      ORDER BY date DESC","    `);","","    return NextResponse.json({","      scanner: {","        status: stats.status,","        totalScanned: stats.total_scanned,","        newPosts: stats.new_posts,","        duplicatePosts: stats.duplicate_posts,","        errors: stats.errors,","        lastScanAt: stats.last_scan_at,","        scanDurationMs: stats.scan_duration_ms,","        errorMessage: stats.error_message","      },","      database: {","        totalPosts,","        recentPosts: recentResult.rows,","        dailyStats: dailyStatsResult.rows","      }","    });","  } catch (error: any) {","    console.error('API error:', error);","    return NextResponse.json(","      { error: 'Failed to fetch scanner stats', details: error.message },","      { status: 500 }","    );","  }","}","",""],"tokenizedAddedLines":[1000000,1000001,1000002,1000003,1000004,1000005,1000006,1000007,1000008,1000009,1000010,1000011,1000012,1000013,1000014,1000015,1000016,1000002,1000017,1000018,1000019,1000002,1000020,1000021,1000022,1000023,1000024,1000025,1000026,1000002,1000027,1000028,1000029,1000030,1000031,1000023,1000032,1000033,1000034,1000026,1000002,1000035,1000036,1000037,1000038,1000039,1000040,1000041,1000042,1000043,1000044,1000045,1000046,1000047,1000048,1000049,1000050,1000051,1000052,1000053,1000054,1000055,1000056,1000057,1000058,1000059,1000002,1000002]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_ADDED"}