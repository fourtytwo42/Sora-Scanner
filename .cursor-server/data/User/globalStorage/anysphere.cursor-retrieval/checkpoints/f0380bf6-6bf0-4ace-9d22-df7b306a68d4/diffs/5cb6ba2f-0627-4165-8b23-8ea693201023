{"fsPath":"\\home\\hendo420\\soraFeed\\README.md","fileUuid":"5cb6ba2f-0627-4165-8b23-8ea693201023","fileSizeBytes":6811,"numLines":269,"diffChanges":[{"originalStartLineNumberOneIndexed":1,"originalEndLineNumberExclusiveOneIndexed":7,"modifiedStartLineNumberOneIndexed":1,"modifiedEndLineNumberExclusiveOneIndexed":70,"addedLines":["# 🎬 Sora Feed - TikTok-Style Video Feed App","","A beautiful, responsive video feed application for browsing Sora-generated videos with PostgreSQL-powered indexing and real-time monitoring.","","## ✨ Features","","- 📱 **TikTok-style Interface** - Vertical scrolling video feed with smooth animations","- 🎥 **Video Controls** - Play/pause, mute, download, and share functionality","- 🔄 **Remix Navigation** - Swipe through video remixes with horizontal gestures","- ❤️ **Favorites System** - Save and browse your favorite videos","- 🔍 **Real-time Scanner** - Automatic indexing of latest Sora posts","- 📊 **Debug Dashboard** - Monitor scanner performance and database stats","- 🗄️ **PostgreSQL Backend** - Robust database with duplicate detection","- 🎨 **Modern UI** - Beautiful gradients, smooth animations, responsive design","","## 🚀 Quick Start","","### 1. Clone the Repository","","```bash","git clone https://github.com/fourtytwo42/soraFeed.git","cd soraFeed","```","","### 2. Configure Environment","","Copy the example environment file:","","```bash","cp env.example .env","```","","Edit `.env` and add your credentials:","","```env","# Sora API Authentication","AUTH_BEARER_TOKEN=your_jwt_token_here","USER_AGENT=Mozilla/5.0...","ACCEPT_LANGUAGE=en-US,en;q=0.9","","# Database Configuration","DB_HOST=localhost","DB_PORT=5432","DB_NAME=sora_feed","DB_USER=postgres","DB_PASSWORD=postgres","```","","### 3. Run Setup (One Command!)","","```bash","npm run setup","```","","This single command will:","- ✅ Install PostgreSQL (if not installed)","- ✅ Create and configure the database","- ✅ Initialize database tables","- ✅ Test Sora API connection","- ✅ Install all npm dependencies","","### 4. Start the Application","","**Start the scanner** (in one terminal):","```bash","npm run scanner","```","","**Start the app** (in another terminal):"],"tokenizedAddedLines":[1000022,2,1000023,2,1000024,2,1000025,1000026,1000027,1000028,1000029,1000030,1000031,1000032,2,1000033,2,1000034,2,5,1000035,1000036,11,2,1000037,2,1000038,2,5,1000039,11,2,1000040,2,1000041,1000042,1000043,1000044,1000045,2,1000046,1000047,1000048,1000049,1000050,1000051,11,2,1000052,2,5,1000053,11,2,1000054,1000055,1000056,1000057,1000058,1000059,2,1000060,2,1000061,5,1000062,11,2,1000063]},{"originalStartLineNumberOneIndexed":9,"originalEndLineNumberExclusiveOneIndexed":37,"modifiedStartLineNumberOneIndexed":72,"modifiedEndLineNumberExclusiveOneIndexed":269,"addedLines":["```","","### 5. Access the App","","- **Main Feed**: http://localhost:3000","- **Scanner Dashboard**: http://localhost:3000/scanner-debug","- **Setup Guide**: http://localhost:3000/setup","","## 📋 Available Commands","","| Command | Description |","|---------|-------------|","| `npm run setup` | Complete setup (PostgreSQL + database + dependencies) |","| `npm run dev` | Start Next.js development server |","| `npm run scanner` | Start PostgreSQL scanner service |","| `npm run build` | Build for production |","| `npm start` | Start production server |","| `npm run lint` | Run ESLint |","","## 🗂️ Project Structure","","```","soraFeed/","├── src/","│   ├── app/                    # Next.js app directory","│   │   ├── page.tsx           # Main feed page","│   │   ├── scanner-debug/     # Scanner monitoring dashboard","│   │   ├── setup/             # Setup guide page","│   │   └── api/               # API routes","│   ├── components/            # React components","│   │   ├── VideoFeed.tsx     # Main video feed component","│   │   ├── VideoPost.tsx     # Individual video post","│   │   ├── FeedLoader.tsx    # Feed data loader","│   │   └── RemixCacheDebug.tsx","│   ├── lib/                   # Utilities","│   │   ├── api.ts            # Sora API client","│   │   ├── db.ts             # Database connection","│   │   └── remixCache.ts     # Remix caching system","│   └── types/                 # TypeScript types","│       └── sora.ts           # Sora API types","├── scripts/                   # Setup and utility scripts","│   ├── scanner.js            # PostgreSQL scanner","│   ├── setup.js              # Automated setup script","│   └── test-*.js             # Test utilities","├── docs/                      # Documentation","│   ├── DATABASE_SETUP.md     # Detailed database guide","│   ├── README_SCANNER.md     # Scanner documentation","│   └── INSTALLATION_COMPLETE.md","├── public/                    # Static assets","├── .env                       # Environment variables (create from env.example)","└── package.json","```","","## 🎯 Key Features Explained","","### Video Feed","- Vertical scrolling with keyboard navigation (↑↓)","- Smooth animations with Framer Motion","- Auto-play on scroll","- Pause on click/hover","","### Remix Navigation","- Horizontal swipe gestures","- Visual remix indicators","- Sliding window for many remixes","- Preloaded remix data with caching","","### Scanner System","- Polls Sora API every 10 seconds","- Fetches latest 200 posts","- Automatic duplicate detection","- Real-time monitoring dashboard","","### Social Sharing","- Share to Facebook & Twitter","- Download videos locally","- Copy permalink to clipboard","","## 📊 Database Schema","","### sora_posts","- `id` (PRIMARY KEY) - Unique post identifier","- `post_data` (JSONB) - Complete post data","- `profile_data` (JSONB) - User profile data","- `text` (TEXT) - Post caption","- `posted_at`, `updated_at` (BIGINT) - Timestamps","- `indexed_at` (TIMESTAMP) - When added to database","","### scanner_stats","- Tracks scanner performance metrics","- Records scan duration and errors","- Stores current scanner status","","## 🔧 Configuration","","### Environment Variables","","| Variable | Description | Default |","|----------|-------------|---------|","| `AUTH_BEARER_TOKEN` | Sora API JWT token | Required |","| `DB_HOST` | PostgreSQL host | localhost |","| `DB_PORT` | PostgreSQL port | 5432 |","| `DB_NAME` | Database name | sora_feed |","| `DB_USER` | Database user | postgres |","| `DB_PASSWORD` | Database password | postgres |","","### Scanner Settings","","Edit `scripts/scanner.js` to customize:","- Scan frequency (default: 10 seconds)","- Posts per scan (default: 200)","- API endpoint and parameters","","## 📚 Documentation","","- **[Database Setup](docs/DATABASE_SETUP.md)** - Detailed PostgreSQL setup guide","- **[Scanner Guide](docs/README_SCANNER.md)** - Scanner system documentation","- **[API Documentation](API-Doc.md)** - Sora API reference","","## 🐛 Troubleshooting","","### PostgreSQL Connection Issues","","```bash","# Check if PostgreSQL is running","sudo systemctl status postgresql","","# Start PostgreSQL","sudo systemctl start postgresql","","# Reset database","npm run setup","```","","### Scanner Not Working","","```bash","# Check scanner logs","npm run scanner","","# Verify API token in .env","cat .env | grep AUTH_BEARER_TOKEN","","# Test API connection","node scripts/test-api.js","```","","### Port 3000 Already in Use","","```bash","# Kill process on port 3000","lsof -ti:3000 | xargs kill -9","","# Or use a different port","PORT=3001 npm run dev","```","","## 🚀 Deployment","","### Production Build","","```bash","# Build the application","npm run build","","# Start production server","npm start","```","","### Environment Setup","","Make sure to set production environment variables:","- `NODE_ENV=production`","- Valid `AUTH_BEARER_TOKEN`","- Production database credentials","","## 🤝 Contributing","","1. Fork the repository","2. Create a feature branch","3. Make your changes","4. Submit a pull request","","## 📝 License","","MIT License - see LICENSE file for details","","## 🙏 Acknowledgments","","- Built with [Next.js](https://nextjs.org/)","- UI powered by [Tailwind CSS](https://tailwindcss.com/)","- Animations with [Framer Motion](https://www.framer.com/motion/)","- Database: [PostgreSQL](https://www.postgresql.org/)","","---","","**Made with ❤️ for the Sora community**"],"tokenizedAddedLines":[11,2,1000064,2,1000065,1000066,1000067,2,1000068,2,1000069,1000070,1000071,1000072,1000073,1000074,1000075,1000076,2,1000077,2,11,1000078,1000079,1000080,1000081,1000082,1000083,1000084,1000085,1000086,1000087,1000088,1000089,1000090,1000091,1000092,1000093,1000094,1000095,1000096,1000097,1000098,1000099,1000100,1000101,1000102,1000103,1000104,1000105,1000106,11,2,1000107,2,1000108,1000109,1000110,1000111,1000112,2,1000113,1000114,1000115,1000116,1000117,2,1000118,1000119,1000120,1000121,1000122,2,1000123,1000124,1000125,1000126,2,1000127,2,1000128,1000129,1000130,1000131,1000132,1000133,1000134,2,1000135,1000136,1000137,1000138,2,1000139,2,1000140,2,1000141,1000142,1000143,1000144,1000145,1000146,1000147,1000148,2,1000149,2,1000150,1000151,1000152,1000153,2,1000154,2,1000155,1000156,1000157,2,1000158,2,1000159,2,5,1000160,1000161,2,1000162,1000163,2,1000164,1000053,11,2,1000165,2,5,1000166,1000062,2,1000167,1000168,2,1000169,1000170,11,2,1000171,2,5,1000172,1000173,2,1000174,1000175,11,2,1000176,2,1000177,2,5,1000178,1000179,2,1000180,1000181,11,2,1000182,2,1000183,1000184,1000185,1000186,2,1000187,2,1000188,1000189,1000190,1000191,2,1000192,2,1000193,2,1000194,2,1000195,1000196,1000197,1000198,2,1000199,2,1000200]}],"gitInfo":{"noRepoFound":true},"kind":"KIND_MODIFIED"}